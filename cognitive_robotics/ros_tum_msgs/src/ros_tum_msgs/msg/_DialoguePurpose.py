"""autogenerated by genpy from ros_tum_msgs/DialoguePurpose.msg. Do not edit."""
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class DialoguePurpose(genpy.Message):
  _md5sum = "cd4fd85574479a3605a19982a6055435"
  _type = "ros_tum_msgs/DialoguePurpose"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """#Dialogue Purpose

int32 REQUEST_CONFIRMATION = 9101
int32 REQUEST_MISSING_INFO = 9102
int32 REQUEST_OPTIONS	   = 9103
int32 REQUEST_OPINION      = 9104
int32 REQUEST_PARAMETER    = 9105
int32 REQUEST_DATA	   = 9106
int32 REQUEST_STATUS       = 9107
int32 REQUEST_GOALS	   = 9108


int32 FIX 		= 9201
int32 MAKE_GESTURE 	= 9202
int32 MOVE	 	= 9203
int32 STOP	 	= 9204
int32 HOLD	 	= 9205
int32 RELEASE	 	= 9206
int32 ACTIVATE	 	= 9207
int32 DEACTIVATE	= 9208
int32 USE_TOOL	 	= 9209
int32 LOCATE	 	= 9210

int32 GIVE_CONFIRMATION 	= 9301
int32 GIVE_MISSING_INFO 	= 9302
int32 GIVE_OPTIONS	   	= 9303
int32 GIVE_OPINION      	= 9304
int32 SHOW_PARAMETER    	= 9305
int32 SHOW_DATA	   		= 9306
int32 SHOW_STATUS       	= 9307
int32 GIVE_GOALS	   	= 9308


int32 GREETINGS 		= 9401
int32 POLITE_ACKNOWLEDGEMENT 	= 9402
int32 POLITE_WARNING 		= 9403


"""
  # Pseudo-constants
  REQUEST_CONFIRMATION = 9101
  REQUEST_MISSING_INFO = 9102
  REQUEST_OPTIONS = 9103
  REQUEST_OPINION = 9104
  REQUEST_PARAMETER = 9105
  REQUEST_DATA = 9106
  REQUEST_STATUS = 9107
  REQUEST_GOALS = 9108
  FIX = 9201
  MAKE_GESTURE = 9202
  MOVE = 9203
  STOP = 9204
  HOLD = 9205
  RELEASE = 9206
  ACTIVATE = 9207
  DEACTIVATE = 9208
  USE_TOOL = 9209
  LOCATE = 9210
  GIVE_CONFIRMATION = 9301
  GIVE_MISSING_INFO = 9302
  GIVE_OPTIONS = 9303
  GIVE_OPINION = 9304
  SHOW_PARAMETER = 9305
  SHOW_DATA = 9306
  SHOW_STATUS = 9307
  GIVE_GOALS = 9308
  GREETINGS = 9401
  POLITE_ACKNOWLEDGEMENT = 9402
  POLITE_WARNING = 9403

  __slots__ = []
  _slot_types = []

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(DialoguePurpose, self).__init__(*args, **kwds)

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      pass
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    try:
      end = 0
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      pass
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    try:
      end = 0
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill

_struct_I = genpy.struct_I
