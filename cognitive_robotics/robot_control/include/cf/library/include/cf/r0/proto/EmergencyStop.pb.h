// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cf/r0/proto/EmergencyStop.proto

#ifndef PROTOBUF_cf_2fr0_2fproto_2fEmergencyStop_2eproto__INCLUDED
#define PROTOBUF_cf_2fr0_2fproto_2fEmergencyStop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cf {
namespace r0 {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cf_2fr0_2fproto_2fEmergencyStop_2eproto();
void protobuf_AssignDesc_cf_2fr0_2fproto_2fEmergencyStop_2eproto();
void protobuf_ShutdownFile_cf_2fr0_2fproto_2fEmergencyStop_2eproto();

class EmergencyStop;

enum EmergencyStop_Type {
  EmergencyStop_Type_STOP = 1,
  EmergencyStop_Type_RESUME = 2,
  EmergencyStop_Type_ABORT = 3
};
bool EmergencyStop_Type_IsValid(int value);
const EmergencyStop_Type EmergencyStop_Type_Type_MIN = EmergencyStop_Type_STOP;
const EmergencyStop_Type EmergencyStop_Type_Type_MAX = EmergencyStop_Type_ABORT;
const int EmergencyStop_Type_Type_ARRAYSIZE = EmergencyStop_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* EmergencyStop_Type_descriptor();
inline const ::std::string& EmergencyStop_Type_Name(EmergencyStop_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    EmergencyStop_Type_descriptor(), value);
}
inline bool EmergencyStop_Type_Parse(
    const ::std::string& name, EmergencyStop_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EmergencyStop_Type>(
    EmergencyStop_Type_descriptor(), name, value);
}
// ===================================================================

class EmergencyStop : public ::google::protobuf::Message {
 public:
  EmergencyStop();
  virtual ~EmergencyStop();

  EmergencyStop(const EmergencyStop& from);

  inline EmergencyStop& operator=(const EmergencyStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmergencyStop& default_instance();

  void Swap(EmergencyStop* other);

  // implements Message ----------------------------------------------

  EmergencyStop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmergencyStop& from);
  void MergeFrom(const EmergencyStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EmergencyStop_Type Type;
  static const Type STOP = EmergencyStop_Type_STOP;
  static const Type RESUME = EmergencyStop_Type_RESUME;
  static const Type ABORT = EmergencyStop_Type_ABORT;
  static inline bool Type_IsValid(int value) {
    return EmergencyStop_Type_IsValid(value);
  }
  static const Type Type_MIN =
    EmergencyStop_Type_Type_MIN;
  static const Type Type_MAX =
    EmergencyStop_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    EmergencyStop_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return EmergencyStop_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return EmergencyStop_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return EmergencyStop_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .cf.r0.proto.EmergencyStop.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::cf::r0::proto::EmergencyStop_Type type() const;
  inline void set_type(::cf::r0::proto::EmergencyStop_Type value);

  // @@protoc_insertion_point(class_scope:cf.r0.proto.EmergencyStop)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cf_2fr0_2fproto_2fEmergencyStop_2eproto();
  friend void protobuf_AssignDesc_cf_2fr0_2fproto_2fEmergencyStop_2eproto();
  friend void protobuf_ShutdownFile_cf_2fr0_2fproto_2fEmergencyStop_2eproto();

  void InitAsDefaultInstance();
  static EmergencyStop* default_instance_;
};
// ===================================================================


// ===================================================================

// EmergencyStop

// required .cf.r0.proto.EmergencyStop.Type type = 1;
inline bool EmergencyStop::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmergencyStop::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmergencyStop::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmergencyStop::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::cf::r0::proto::EmergencyStop_Type EmergencyStop::type() const {
  return static_cast< ::cf::r0::proto::EmergencyStop_Type >(type_);
}
inline void EmergencyStop::set_type(::cf::r0::proto::EmergencyStop_Type value) {
  assert(::cf::r0::proto::EmergencyStop_Type_IsValid(value));
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace r0
}  // namespace cf

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cf::r0::proto::EmergencyStop_Type>() {
  return ::cf::r0::proto::EmergencyStop_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cf_2fr0_2fproto_2fEmergencyStop_2eproto__INCLUDED
