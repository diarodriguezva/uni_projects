// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cf/r0/proto/GetPositionTask.proto

#ifndef PROTOBUF_cf_2fr0_2fproto_2fGetPositionTask_2eproto__INCLUDED
#define PROTOBUF_cf_2fr0_2fproto_2fGetPositionTask_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "cf/r0/proto/Pose.pb.h"
// @@protoc_insertion_point(includes)

namespace cf {
namespace r0 {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cf_2fr0_2fproto_2fGetPositionTask_2eproto();
void protobuf_AssignDesc_cf_2fr0_2fproto_2fGetPositionTask_2eproto();
void protobuf_ShutdownFile_cf_2fr0_2fproto_2fGetPositionTask_2eproto();

class GetPositionTaskRequest;
class GetPositionTaskResponse;

enum GetPositionTaskResponse_Status {
  GetPositionTaskResponse_Status_SUCCESS = 1,
  GetPositionTaskResponse_Status_EFFECTORNOTCONFIGURED = 2
};
bool GetPositionTaskResponse_Status_IsValid(int value);
const GetPositionTaskResponse_Status GetPositionTaskResponse_Status_Status_MIN = GetPositionTaskResponse_Status_SUCCESS;
const GetPositionTaskResponse_Status GetPositionTaskResponse_Status_Status_MAX = GetPositionTaskResponse_Status_EFFECTORNOTCONFIGURED;
const int GetPositionTaskResponse_Status_Status_ARRAYSIZE = GetPositionTaskResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPositionTaskResponse_Status_descriptor();
inline const ::std::string& GetPositionTaskResponse_Status_Name(GetPositionTaskResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPositionTaskResponse_Status_descriptor(), value);
}
inline bool GetPositionTaskResponse_Status_Parse(
    const ::std::string& name, GetPositionTaskResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPositionTaskResponse_Status>(
    GetPositionTaskResponse_Status_descriptor(), name, value);
}
// ===================================================================

class GetPositionTaskRequest : public ::google::protobuf::Message {
 public:
  GetPositionTaskRequest();
  virtual ~GetPositionTaskRequest();

  GetPositionTaskRequest(const GetPositionTaskRequest& from);

  inline GetPositionTaskRequest& operator=(const GetPositionTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPositionTaskRequest& default_instance();

  void Swap(GetPositionTaskRequest* other);

  // implements Message ----------------------------------------------

  GetPositionTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPositionTaskRequest& from);
  void MergeFrom(const GetPositionTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string effector = 1;
  inline bool has_effector() const;
  inline void clear_effector();
  static const int kEffectorFieldNumber = 1;
  inline const ::std::string& effector() const;
  inline void set_effector(const ::std::string& value);
  inline void set_effector(const char* value);
  inline void set_effector(const char* value, size_t size);
  inline ::std::string* mutable_effector();
  inline ::std::string* release_effector();
  inline void set_allocated_effector(::std::string* effector);

  // @@protoc_insertion_point(class_scope:cf.r0.proto.GetPositionTaskRequest)
 private:
  inline void set_has_effector();
  inline void clear_has_effector();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* effector_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cf_2fr0_2fproto_2fGetPositionTask_2eproto();
  friend void protobuf_AssignDesc_cf_2fr0_2fproto_2fGetPositionTask_2eproto();
  friend void protobuf_ShutdownFile_cf_2fr0_2fproto_2fGetPositionTask_2eproto();

  void InitAsDefaultInstance();
  static GetPositionTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetPositionTaskResponse : public ::google::protobuf::Message {
 public:
  GetPositionTaskResponse();
  virtual ~GetPositionTaskResponse();

  GetPositionTaskResponse(const GetPositionTaskResponse& from);

  inline GetPositionTaskResponse& operator=(const GetPositionTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPositionTaskResponse& default_instance();

  void Swap(GetPositionTaskResponse* other);

  // implements Message ----------------------------------------------

  GetPositionTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPositionTaskResponse& from);
  void MergeFrom(const GetPositionTaskResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetPositionTaskResponse_Status Status;
  static const Status SUCCESS = GetPositionTaskResponse_Status_SUCCESS;
  static const Status EFFECTORNOTCONFIGURED = GetPositionTaskResponse_Status_EFFECTORNOTCONFIGURED;
  static inline bool Status_IsValid(int value) {
    return GetPositionTaskResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    GetPositionTaskResponse_Status_Status_MIN;
  static const Status Status_MAX =
    GetPositionTaskResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    GetPositionTaskResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return GetPositionTaskResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return GetPositionTaskResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return GetPositionTaskResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .cf.r0.proto.GetPositionTaskResponse.Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::cf::r0::proto::GetPositionTaskResponse_Status status() const;
  inline void set_status(::cf::r0::proto::GetPositionTaskResponse_Status value);

  // required string effector = 2;
  inline bool has_effector() const;
  inline void clear_effector();
  static const int kEffectorFieldNumber = 2;
  inline const ::std::string& effector() const;
  inline void set_effector(const ::std::string& value);
  inline void set_effector(const char* value);
  inline void set_effector(const char* value, size_t size);
  inline ::std::string* mutable_effector();
  inline ::std::string* release_effector();
  inline void set_allocated_effector(::std::string* effector);

  // optional .cf.r0.proto.Pose pose = 3;
  inline bool has_pose() const;
  inline void clear_pose();
  static const int kPoseFieldNumber = 3;
  inline const ::cf::r0::proto::Pose& pose() const;
  inline ::cf::r0::proto::Pose* mutable_pose();
  inline ::cf::r0::proto::Pose* release_pose();
  inline void set_allocated_pose(::cf::r0::proto::Pose* pose);

  // @@protoc_insertion_point(class_scope:cf.r0.proto.GetPositionTaskResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_effector();
  inline void clear_has_effector();
  inline void set_has_pose();
  inline void clear_has_pose();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* effector_;
  ::cf::r0::proto::Pose* pose_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cf_2fr0_2fproto_2fGetPositionTask_2eproto();
  friend void protobuf_AssignDesc_cf_2fr0_2fproto_2fGetPositionTask_2eproto();
  friend void protobuf_ShutdownFile_cf_2fr0_2fproto_2fGetPositionTask_2eproto();

  void InitAsDefaultInstance();
  static GetPositionTaskResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GetPositionTaskRequest

// required string effector = 1;
inline bool GetPositionTaskRequest::has_effector() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPositionTaskRequest::set_has_effector() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPositionTaskRequest::clear_has_effector() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPositionTaskRequest::clear_effector() {
  if (effector_ != &::google::protobuf::internal::kEmptyString) {
    effector_->clear();
  }
  clear_has_effector();
}
inline const ::std::string& GetPositionTaskRequest::effector() const {
  return *effector_;
}
inline void GetPositionTaskRequest::set_effector(const ::std::string& value) {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  effector_->assign(value);
}
inline void GetPositionTaskRequest::set_effector(const char* value) {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  effector_->assign(value);
}
inline void GetPositionTaskRequest::set_effector(const char* value, size_t size) {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  effector_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetPositionTaskRequest::mutable_effector() {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  return effector_;
}
inline ::std::string* GetPositionTaskRequest::release_effector() {
  clear_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = effector_;
    effector_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetPositionTaskRequest::set_allocated_effector(::std::string* effector) {
  if (effector_ != &::google::protobuf::internal::kEmptyString) {
    delete effector_;
  }
  if (effector) {
    set_has_effector();
    effector_ = effector;
  } else {
    clear_has_effector();
    effector_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetPositionTaskResponse

// required .cf.r0.proto.GetPositionTaskResponse.Status status = 1;
inline bool GetPositionTaskResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPositionTaskResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPositionTaskResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPositionTaskResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::cf::r0::proto::GetPositionTaskResponse_Status GetPositionTaskResponse::status() const {
  return static_cast< ::cf::r0::proto::GetPositionTaskResponse_Status >(status_);
}
inline void GetPositionTaskResponse::set_status(::cf::r0::proto::GetPositionTaskResponse_Status value) {
  assert(::cf::r0::proto::GetPositionTaskResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
}

// required string effector = 2;
inline bool GetPositionTaskResponse::has_effector() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPositionTaskResponse::set_has_effector() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPositionTaskResponse::clear_has_effector() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPositionTaskResponse::clear_effector() {
  if (effector_ != &::google::protobuf::internal::kEmptyString) {
    effector_->clear();
  }
  clear_has_effector();
}
inline const ::std::string& GetPositionTaskResponse::effector() const {
  return *effector_;
}
inline void GetPositionTaskResponse::set_effector(const ::std::string& value) {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  effector_->assign(value);
}
inline void GetPositionTaskResponse::set_effector(const char* value) {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  effector_->assign(value);
}
inline void GetPositionTaskResponse::set_effector(const char* value, size_t size) {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  effector_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetPositionTaskResponse::mutable_effector() {
  set_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    effector_ = new ::std::string;
  }
  return effector_;
}
inline ::std::string* GetPositionTaskResponse::release_effector() {
  clear_has_effector();
  if (effector_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = effector_;
    effector_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetPositionTaskResponse::set_allocated_effector(::std::string* effector) {
  if (effector_ != &::google::protobuf::internal::kEmptyString) {
    delete effector_;
  }
  if (effector) {
    set_has_effector();
    effector_ = effector;
  } else {
    clear_has_effector();
    effector_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .cf.r0.proto.Pose pose = 3;
inline bool GetPositionTaskResponse::has_pose() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetPositionTaskResponse::set_has_pose() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetPositionTaskResponse::clear_has_pose() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetPositionTaskResponse::clear_pose() {
  if (pose_ != NULL) pose_->::cf::r0::proto::Pose::Clear();
  clear_has_pose();
}
inline const ::cf::r0::proto::Pose& GetPositionTaskResponse::pose() const {
  return pose_ != NULL ? *pose_ : *default_instance_->pose_;
}
inline ::cf::r0::proto::Pose* GetPositionTaskResponse::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) pose_ = new ::cf::r0::proto::Pose;
  return pose_;
}
inline ::cf::r0::proto::Pose* GetPositionTaskResponse::release_pose() {
  clear_has_pose();
  ::cf::r0::proto::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline void GetPositionTaskResponse::set_allocated_pose(::cf::r0::proto::Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace r0
}  // namespace cf

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cf::r0::proto::GetPositionTaskResponse_Status>() {
  return ::cf::r0::proto::GetPositionTaskResponse_Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cf_2fr0_2fproto_2fGetPositionTask_2eproto__INCLUDED
